def deforestation(n, tree):
    # print(n, tree)
    all_leaves = list(set([leaf for leaves in tree for leaf in leaves if leaf != 1]))
    no_of_leaves =  len(all_leaves)
    branches = {}
    # print('no_of_leaves',no_of_leaves)

    no_of_branches = 0
    parent_branches = [1]

    for leaf in all_leaves:
        branches.update({str(leaf): []})

    for leaves in tree:
        if 1 in leaves:            
            continue
        
        elif leaves[0] < leaves[1]:
            if leaves[0] not in parent_branches:
                parent_branches.append(leaves[0])
                branches.get(str(leaves[0])).append(leaves[1])
            else:
                branches.get(str(leaves[0])).append(leaves[1])
        elif leaves[1] < leaves[0]:
            if leaves[1] not in parent_branches:
                parent_branches.append(leaves[1])
                branches.get(str(leaves[1])).append(leaves[0])
            else:
                branches.get(str(leaves[1])).append(leaves[0])
    
    no_of_branches = len(parent_branches)

    # print('no_of_branches',no_of_branches)
    # print('parent_branches',parent_branches)
    # print('branches',branches)

    winner = ''
    count = 0
    while len(parent_branches) != 0 and len(all_leaves) != 0:
        if count == 0 and len(parent_branches) > 1:
            parent_branches.pop(parent_branches.index(max(parent_branches)))
            # print('left out parent_branches',parent_branches)
        
        elif count> 0 and len(parent_branches) > 1:
            if no_of_leaves >= 2 and no_of_branches >= 2 and len(parent_branches) > 0 and len(all_leaves) > 0:
                maxi = max(parent_branches)
                for leaf in branches[str(maxi)]:
                    # print('leavesssss', leaf)
                    if leaf in all_leaves:
                        all_leaves.pop(all_leaves.index(leaf))
                    else:
                        continue
                branches[str(maxi)] = []
                if maxi in parent_branches:
                    parent_branches.pop(parent_branches.index(maxi))
                # print('left out 2 parent_branches',parent_branches)
                # print('left out 1 all_leaves',all_leaves)
            elif no_of_leaves >= 2 and no_of_branches ==2 and len(parent_branches) > 0 and len(all_leaves) > 0:
                maxi_leave = max(all_leaves)
                if maxi_leave in all_leaves:
                    all_leaves.pop(all_leaves.index(maxi_leave))
                # print('left out 2 all_leaves',all_leaves)
        
        elif len(parent_branches) == 1 and len(all_leaves) > 0:
            maxi_leave2 = max(all_leaves)
            if maxi_leave2 in all_leaves:
                all_leaves.pop(all_leaves.index(maxi_leave2))
            # print('left out 3 all_leaves',all_leaves)
        
        count += 1
        if count%2 != 0:
            winner='Alice'
        else:
            winner='Bob'
    # print(winner)
    return winner

# print(deforestation(5, [[1, 2], [3, 1], [3, 4], [5, 4]]))
# print(deforestation(5, [[1, 2], [3, 1], [3, 4], [5, 4], [3,6], [2,7], [2,8], [9,2]]))

print(deforestation(188, [
[99,5]
,[191,8]
,[16,9]
,[202,12]
,[275,18]
,[166,19]
,[43,21]
,[10,22]
,[170,23]
,[42,24]
,[78,25]
,[13,27]
,[346,29]
,[246,31]
,[184,34]
,[122,39]
,[218,42]
,[197,45]
,[269,46]
,[351,49]
,[54,50]
,[97,51]
,[234,52]
,[159,57]
,[209,61]
,[292,62]
,[79,67]
,[89,71]
,[364,77]
,[30,78]
,[232,79]
,[112,80]
,[269,82]
,[63,83]
,[340,84]
,[359,90]
,[242,91]
,[312,102]
,[115,105]
,[245,107]
,[41,111]
,[337,41]
,[177,112]
,[311,113]
,[85,116]
,[73,120]
,[161,121]
,[345,122]
,[341,129]
,[209,130]
,[126,133]
,[312,140]
,[48,146]
,[346,48]
,[138,147]
,[123,138]
,[351,148]
,[43,151]
,[106,43]
,[88,106]
,[251,155]
,[165,158]
,[1,160]
,[316,1]
,[137,161]
,[333,137]
,[118,164]
,[3,165]
,[64,167]
,[198,64]
,[207,169]
,[162,171]
,[188,162]
,[86,172]
,[268,175]
,[47,176]
,[104,47]
,[131,177]
,[95,178]
,[364,179]
,[65,181]
,[125,65]
,[85,183]
,[201,85]
,[216,184]
,[272,185]
,[156,186]
,[141,156]
,[26,141]
,[376,26]
,[99,187]
,[372,190]
,[96,196]
,[98,96]
,[269,98]
,[192,199]
,[275,192]
,[117,202]
,[58,117]
,[110,58]
,[386,203]
,[15,204]
,[103,15]
,[236,206]
,[377,208]
,[195,211]
,[159,213]
,[20,159]
,[13,217]
,[108,13]
,[134,218]
,[351,134]
,[245,219]
,[93,222]
,[263,93]
,[56,226]
,[205,56]
,[189,227]
,[173,189]
,[381,173]
,[214,230]
,[94,231]
,[229,232]
,[260,233]
,[32,234]
,[294,236]
,[143,239]
,[92,240]
,[94,241]
,[282,242]
,[311,247]
,[142,249]
,[182,253]
,[245,256]
,[380,258]
,[245,263]
,[154,264]
,[207,265]
,[316,207]
,[35,266]
,[309,35]
,[323,273]
,[59,276]
,[124,59]
,[197,124]
,[72,277]
,[269,72]
,[16,278]
,[332,16]
,[229,280]
,[126,229]
,[262,282]
,[86,262]
,[7,86]
,[275,283]
,[198,285]
,[313,287]
,[88,290]
,[135,88]
,[250,291]
,[38,292]
,[68,293]
,[364,294]
,[267,295]
,[154,267]
,[150,296]
,[200,150]
,[362,298]
,[324,299]
,[54,300]
,[261,54]
,[132,261]
,[284,132]
,[44,284]
,[81,44]
,[357,301]
,[209,303]
,[339,209]
,[269,305]
,[100,306]
,[89,100]
,[255,310]
,[68,255]
,[316,311]
,[380,312]
,[215,314]
,[200,315]
,[205,200]
,[101,205]
,[94,101]
,[385,94]
,[36,316]
,[373,36]
,[347,317]
,[216,318]
,[348,216]
,[341,319]
,[245,320]
,[73,245]
,[131,73]
,[108,321]
,[135,322]
,[271,135]
,[281,323]
,[327,281]
,[347,324]
,[331,325]
,[343,327]
,[157,331]
,[302,157]
,[343,302]
,[248,332]
,[329,248]
,[33,333]
,[362,33]
,[63,336]
,[304,337]
,[347,304]
,[259,338]
,[235,340]
,[225,235]
,[4,225]
,[144,4]
,[40,341]
,[363,40]
,[257,346]
,[376,257]
,[2,347]
,[110,2]
,[63,110]
,[118,63]
,[212,348]
,[188,212]
,[268,349]
,[174,268]
,[252,174]
,[384,252]
,[87,351]
,[68,87]
,[275,68]
,[7,275]
,[92,7]
,[191,92]
,[126,352]
,[70,126]
,[289,70]
,[142,355]
,[251,356]
,[288,357]
,[328,288]
,[279,358]
,[254,360]
,[119,254]
,[220,119]
,[210,220]
,[37,210]
,[197,361]
,[142,197]
,[246,142]
,[103,246]
,[97,103]
,[95,97]
,[228,95]
,[376,228]
,[378,363]
,[152,365]
,[188,152]
,[345,366]
,[350,345]
,[244,350]
,[168,244]
,[307,168]
,[136,307]
,[195,136]
,[250,195]
,[223,367]
,[259,223]
,[191,259]
,[334,191]
,[76,334]
,[89,76]
,[279,89]
,[193,279]
,[109,193]
,[221,109]
,[10,370]
,[297,10]
,[250,297]
,[17,250]
,[69,17]
,[384,69]
,[364,371]
,[182,364]
,[369,182]
,[108,369]
,[354,108]
,[342,354]
,[143,342]
,[289,143]
,[6,289]
,[368,6]
,[359,368]
,[128,373]
,[166,128]
,[214,166]
,[374,375]
,[221,374]
,[372,376]
,[379,372]
,[330,377]
,[30,330]
,[114,30]
,[118,378]
,[149,118]
,[74,149]
,[329,74]
,[104,329]
,[123,104]
,[188,123]
,[66,188]
,[144,66]
,[215,144]
,[153,215]
,[362,153]
,[326,362]
,[269,326]
,[359,269]
,[221,359]
,[28,221]
,[38,379]
,[81,38]
,[238,81]
,[260,238]
,[383,380]
,[139,381]
,[55,382]
,[99,55]
,[201,383]
,[114,201]
,[339,384]
,[125,339]
,[286,125]
,[328,286]
,[270,328]
,[53,270]
,[272,53]
,[274,272]
,[139,274]
,[214,139]
,[114,214]
,[115,114]
,[313,115]
,[163,385]
,[313,163]
,[99,313]
,[335,99]
,[237,335]
,[353,237]
,[32,353]
,[198,32]
,[3,198]
,[194,3]
,[243,194]
,[309,243]
,[75,309]
,[251,75]
,[28,251]
,[271,28]
,[154,271]
,[308,154]
,[20,308]
,[344,20]
,[343,344]
,[131,343]
,[11,131]
,[145,11]
,[224,145]
,[37,386]
,[170,37]
,[224,170]
,[260,224]
,[14,260]
,[127,14]
,[180,127]
,[60,180]
]))